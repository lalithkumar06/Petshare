{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { adoptions } from '../utils/api';\nimport api from '../utils/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const {\n        data\n      } = await api.get('/notifications');\n      setNotes(data);\n    } catch (err) {\n      toast.error('Failed to fetch notifications');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        my: 2\n      },\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: notes.map(n => /*#__PURE__*/_jsxDEV(ListItem, {\n        divider: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: n.message,\n          secondary: new Date(n.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, n._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","List","ListItem","ListItemText","IconButton","adoptions","api","toast","jsxDEV","_jsxDEV","Notifications","_s","notes","setNotes","fetchNotes","data","get","err","error","children","variant","sx","my","fileName","_jsxFileName","lineNumber","columnNumber","map","n","divider","primary","message","secondary","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/project/client/src/pages/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, List, ListItem, ListItemText, IconButton } from '@mui/material';\r\nimport { adoptions } from '../utils/api';\r\nimport api from '../utils/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Notifications = () => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const { data } = await api.get('/notifications');\r\n      setNotes(data);\r\n    } catch (err) {\r\n      toast.error('Failed to fetch notifications');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ my: 2 }}>Notifications</Typography>\r\n      <List>\r\n        {notes.map(n => (\r\n          <ListItem key={n._id} divider>\r\n            <ListItemText primary={n.message} secondary={new Date(n.createdAt).toLocaleString()} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAC/F,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,GAAG,MAAM,cAAc;AAC9B,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,gBAAgB,CAAC;MAChDH,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZV,KAAK,CAACW,KAAK,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC;EAED,oBACET,OAAA,CAACV,SAAS;IAAAoB,QAAA,gBACRV,OAAA,CAACT,UAAU;MAACoB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClEjB,OAAA,CAACR,IAAI;MAAAkB,QAAA,EACFP,KAAK,CAACe,GAAG,CAACC,CAAC,iBACVnB,OAAA,CAACP,QAAQ;QAAa2B,OAAO;QAAAV,QAAA,eAC3BV,OAAA,CAACN,YAAY;UAAC2B,OAAO,EAAEF,CAAC,CAACG,OAAQ;UAACC,SAAS,EAAE,IAAIC,IAAI,CAACL,CAAC,CAACM,SAAS,CAAC,CAACC,cAAc,CAAC;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD1EE,CAAC,CAACQ,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACf,EAAA,CA5BID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}