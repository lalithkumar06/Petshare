{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  // If the request data is FormData, let the browser/axios set Content-Type (including multipart boundary)\n  if (config.data instanceof FormData) {\n    // do not set content-type\n    return config;\n  }\n  return config;\n});\nexport const auth = {\n  register: data => api.post('/auth/register', data),\n  login: data => api.post('/auth/login', data)\n};\nexport const pets = {\n  getAll: () => api.get('/pets'),\n  getOne: id => api.get(`/pets/${id}`),\n  create: data => api.post('/pets', data),\n  update: (id, data) => api.patch(`/pets/${id}`, data),\n  delete: id => api.delete(`/pets/${id}`)\n};\nexport const adoptions = {\n  getAll: () => api.get('/adoptions'),\n  create: petId => api.post('/adoptions', {\n    petId\n  }),\n  updateStatus: (id, status) => api.patch(`/adoptions/${id}`, {\n    status\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","data","FormData","auth","register","post","login","pets","getAll","get","getOne","id","update","patch","delete","adoptions","petId","updateStatus","status"],"sources":["C:/Users/DELL/Desktop/project/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  // If the request data is FormData, let the browser/axios set Content-Type (including multipart boundary)\r\n  if (config.data instanceof FormData) {\r\n    // do not set content-type\r\n    return config;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const auth = {\r\n  register: (data) => api.post('/auth/register', data),\r\n  login: (data) => api.post('/auth/login', data),\r\n};\r\n\r\nexport const pets = {\r\n  getAll: () => api.get('/pets'),\r\n  getOne: (id) => api.get(`/pets/${id}`),\r\n  create: (data) => api.post('/pets', data),\r\n  update: (id, data) => api.patch(`/pets/${id}`, data),\r\n  delete: (id) => api.delete(`/pets/${id}`),\r\n};\r\n\r\nexport const adoptions = {\r\n  getAll: () => api.get('/adoptions'),\r\n  create: (petId) => api.post('/adoptions', { petId }),\r\n  updateStatus: (id, status) => api.patch(`/adoptions/${id}`, { status }),\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEFL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA;EACA,IAAID,MAAM,CAACM,IAAI,YAAYC,QAAQ,EAAE;IACnC;IACA,OAAOP,MAAM;EACf;EACA,OAAOA,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMQ,IAAI,GAAG;EAClBC,QAAQ,EAAGH,IAAI,IAAKf,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;EACpDK,KAAK,EAAGL,IAAI,IAAKf,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEJ,IAAI;AAC/C,CAAC;AAED,OAAO,MAAMM,IAAI,GAAG;EAClBC,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,OAAO,CAAC;EAC9BC,MAAM,EAAGC,EAAE,IAAKzB,GAAG,CAACuB,GAAG,CAAC,SAASE,EAAE,EAAE,CAAC;EACtCxB,MAAM,EAAGc,IAAI,IAAKf,GAAG,CAACmB,IAAI,CAAC,OAAO,EAAEJ,IAAI,CAAC;EACzCW,MAAM,EAAEA,CAACD,EAAE,EAAEV,IAAI,KAAKf,GAAG,CAAC2B,KAAK,CAAC,SAASF,EAAE,EAAE,EAAEV,IAAI,CAAC;EACpDa,MAAM,EAAGH,EAAE,IAAKzB,GAAG,CAAC4B,MAAM,CAAC,SAASH,EAAE,EAAE;AAC1C,CAAC;AAED,OAAO,MAAMI,SAAS,GAAG;EACvBP,MAAM,EAAEA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,YAAY,CAAC;EACnCtB,MAAM,EAAG6B,KAAK,IAAK9B,GAAG,CAACmB,IAAI,CAAC,YAAY,EAAE;IAAEW;EAAM,CAAC,CAAC;EACpDC,YAAY,EAAEA,CAACN,EAAE,EAAEO,MAAM,KAAKhC,GAAG,CAAC2B,KAAK,CAAC,cAAcF,EAAE,EAAE,EAAE;IAAEO;EAAO,CAAC;AACxE,CAAC;AAED,eAAehC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}