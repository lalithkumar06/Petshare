{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, List, ListItem, ListItemText, Button, Box } from '@mui/material';\nimport api, { adoptions } from '../utils/api';\nimport { useAuth } from '../contexts/AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const {\n        data\n      } = await api.get('/notifications');\n      setNotes(data);\n    } catch (err) {\n      console.error('Notifications fetch error:', err);\n      const serverMessage = err.response && err.response.data && err.response.data.message;\n      if (err.response && err.response.status === 401) {\n        toast.info(serverMessage || 'Please login to view notifications');\n      } else if (serverMessage) {\n        toast.error(serverMessage);\n      } else {\n        toast.error('Failed to fetch notifications');\n      }\n    }\n  };\n  const handleAction = async (adoptionId, action, noteId) => {\n    try {\n      await adoptions.updateStatus(adoptionId, action);\n      // mark notification as read\n      await api.patch(`/notifications/${noteId}/read`);\n      toast.success(`Request ${action}`);\n      fetchNotes();\n      // optionally refresh other lists in the app\n    } catch (err) {\n      toast.error('Failed to perform action');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        my: 2\n      },\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: notes.map(n => {\n        // If there's an adoption object, populate details\n        const adoption = n.adoption;\n        const isOwner = adoption && adoption.pet && adoption.pet.owner && adoption.pet.owner._id === (user && user.id);\n        const pending = adoption && adoption.status === 'pending';\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: n.message,\n            secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: new Date(n.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), adoption && adoption.pet && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Pet: \", adoption.pet.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 50\n              }, this), adoption && adoption.adopter && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Requester: \", adoption.adopter.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 54\n              }, this), adoption && adoption.status && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Status: \", adoption.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), adoption && isOwner && pending && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              variant: \"contained\",\n              onClick: () => handleAction(adoption._id, 'approved', n._id),\n              children: \"Accept\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"error\",\n              variant: \"outlined\",\n              onClick: () => handleAction(adoption._id, 'rejected', n._id),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, n._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"V3biSsICAjzgk0r4oIXd6YzH2rQ=\", false, function () {\n  return [useAuth];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","List","ListItem","ListItemText","Button","Box","api","adoptions","useAuth","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_s","notes","setNotes","user","fetchNotes","data","get","err","console","error","serverMessage","response","message","status","info","handleAction","adoptionId","action","noteId","updateStatus","patch","success","children","variant","sx","my","fileName","_jsxFileName","lineNumber","columnNumber","map","n","adoption","isOwner","pet","owner","_id","id","pending","divider","primary","secondary","Date","createdAt","toLocaleString","name","adopter","username","display","gap","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/project/client/src/pages/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, List, ListItem, ListItemText, Button, Box } from '@mui/material';\r\nimport api, { adoptions } from '../utils/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Notifications = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const { data } = await api.get('/notifications');\r\n      setNotes(data);\r\n    } catch (err) {\r\n      console.error('Notifications fetch error:', err);\r\n      const serverMessage = err.response && err.response.data && err.response.data.message;\r\n      if (err.response && err.response.status === 401) {\r\n        toast.info(serverMessage || 'Please login to view notifications');\r\n      } else if (serverMessage) {\r\n        toast.error(serverMessage);\r\n      } else {\r\n        toast.error('Failed to fetch notifications');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAction = async (adoptionId, action, noteId) => {\r\n    try {\r\n      await adoptions.updateStatus(adoptionId, action);\r\n      // mark notification as read\r\n      await api.patch(`/notifications/${noteId}/read`);\r\n      toast.success(`Request ${action}`);\r\n      fetchNotes();\r\n      // optionally refresh other lists in the app\r\n    } catch (err) {\r\n      toast.error('Failed to perform action');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ my: 2 }}>Notifications</Typography>\r\n      <List>\r\n        {notes.map(n => {\r\n          // If there's an adoption object, populate details\r\n          const adoption = n.adoption;\r\n          const isOwner = adoption && adoption.pet && adoption.pet.owner && adoption.pet.owner._id === (user && user.id);\r\n          const pending = adoption && adoption.status === 'pending';\r\n          return (\r\n            <ListItem key={n._id} divider>\r\n              <ListItemText\r\n                primary={n.message}\r\n                secondary={\r\n                  <>\r\n                    <div>{new Date(n.createdAt).toLocaleString()}</div>\r\n                    {adoption && adoption.pet && <div>Pet: {adoption.pet.name}</div>}\r\n                    {adoption && adoption.adopter && <div>Requester: {adoption.adopter.username}</div>}\r\n                    {adoption && adoption.status && <div>Status: {adoption.status}</div>}\r\n                  </>\r\n                }\r\n              />\r\n\r\n              {/* Show accept/reject only to the pet owner while pending */}\r\n              {adoption && isOwner && pending && (\r\n                <Box sx={{ display: 'flex', gap: 1 }}>\r\n                  <Button color=\"success\" variant=\"contained\" onClick={() => handleAction(adoption._id, 'approved', n._id)}>Accept</Button>\r\n                  <Button color=\"error\" variant=\"outlined\" onClick={() => handleAction(adoption._id, 'rejected', n._id)}>Reject</Button>\r\n                </Box>\r\n              )}\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}