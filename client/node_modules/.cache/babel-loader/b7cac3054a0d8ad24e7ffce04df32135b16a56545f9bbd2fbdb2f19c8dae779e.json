{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Container,Typography,List,ListItem,ListItemText,Button,Box}from'@mui/material';import api,{adoptions}from'../utils/api';import{useAuth}from'../contexts/AuthContext';import{toast}from'react-toastify';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Notifications=()=>{const[notes,setNotes]=useState([]);const{user}=useAuth();useEffect(()=>{fetchNotes();},[]);const fetchNotes=async()=>{try{const{data}=await api.get('/notifications');setNotes(data);}catch(err){console.error('Notifications fetch error:',err);const serverMessage=err.response&&err.response.data&&err.response.data.message;if(err.response&&err.response.status===401){toast.info(serverMessage||'Please login to view notifications');}else if(serverMessage){toast.error(serverMessage);}else{toast.error('Failed to fetch notifications');}}};const handleAction=async(adoptionId,action,noteId)=>{try{await adoptions.updateStatus(adoptionId,action);// mark notification as read\nawait api.patch(\"/notifications/\".concat(noteId,\"/read\"));toast.success(\"Request \".concat(action));fetchNotes();// optionally refresh other lists in the app\n}catch(err){toast.error('Failed to perform action');}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{my:2},children:\"Notifications\"}),/*#__PURE__*/_jsx(List,{children:notes.map(n=>{// If there's an adoption object, populate details\nconst adoption=n.adoption;const isOwner=adoption&&adoption.pet&&adoption.pet.owner&&adoption.pet.owner._id===(user&&user.id);const pending=adoption&&adoption.status==='pending';return/*#__PURE__*/_jsxs(ListItem,{divider:true,children:[/*#__PURE__*/_jsx(ListItemText,{primary:n.message,secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:new Date(n.createdAt).toLocaleString()}),adoption&&adoption.pet&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Pet: \",adoption.pet.name]}),adoption&&adoption.adopter&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Requester: \",adoption.adopter.username]}),adoption&&adoption.status&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Status: \",adoption.status]})]})}),adoption&&isOwner&&pending&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:1},children:[/*#__PURE__*/_jsx(Button,{color:\"success\",variant:\"contained\",onClick:()=>handleAction(adoption._id,'approved',n._id),children:\"Accept\"}),/*#__PURE__*/_jsx(Button,{color:\"error\",variant:\"outlined\",onClick:()=>handleAction(adoption._id,'rejected',n._id),children:\"Reject\"})]})]},n._id);})})]});};export default Notifications;","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","List","ListItem","ListItemText","Button","Box","api","adoptions","useAuth","toast","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Notifications","notes","setNotes","user","fetchNotes","data","get","err","console","error","serverMessage","response","message","status","info","handleAction","adoptionId","action","noteId","updateStatus","patch","concat","success","children","variant","sx","my","map","n","adoption","isOwner","pet","owner","_id","id","pending","divider","primary","secondary","Date","createdAt","toLocaleString","name","adopter","username","display","gap","color","onClick"],"sources":["C:/Users/DELL/Desktop/project/client/src/pages/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Container, Typography, List, ListItem, ListItemText, Button, Box } from '@mui/material';\r\nimport api, { adoptions } from '../utils/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Notifications = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const { data } = await api.get('/notifications');\r\n      setNotes(data);\r\n    } catch (err) {\r\n      console.error('Notifications fetch error:', err);\r\n      const serverMessage = err.response && err.response.data && err.response.data.message;\r\n      if (err.response && err.response.status === 401) {\r\n        toast.info(serverMessage || 'Please login to view notifications');\r\n      } else if (serverMessage) {\r\n        toast.error(serverMessage);\r\n      } else {\r\n        toast.error('Failed to fetch notifications');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAction = async (adoptionId, action, noteId) => {\r\n    try {\r\n      await adoptions.updateStatus(adoptionId, action);\r\n      // mark notification as read\r\n      await api.patch(`/notifications/${noteId}/read`);\r\n      toast.success(`Request ${action}`);\r\n      fetchNotes();\r\n      // optionally refresh other lists in the app\r\n    } catch (err) {\r\n      toast.error('Failed to perform action');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" sx={{ my: 2 }}>Notifications</Typography>\r\n      <List>\r\n        {notes.map(n => {\r\n          // If there's an adoption object, populate details\r\n          const adoption = n.adoption;\r\n          const isOwner = adoption && adoption.pet && adoption.pet.owner && adoption.pet.owner._id === (user && user.id);\r\n          const pending = adoption && adoption.status === 'pending';\r\n          return (\r\n            <ListItem key={n._id} divider>\r\n              <ListItemText\r\n                primary={n.message}\r\n                secondary={\r\n                  <>\r\n                    <div>{new Date(n.createdAt).toLocaleString()}</div>\r\n                    {adoption && adoption.pet && <div>Pet: {adoption.pet.name}</div>}\r\n                    {adoption && adoption.adopter && <div>Requester: {adoption.adopter.username}</div>}\r\n                    {adoption && adoption.status && <div>Status: {adoption.status}</div>}\r\n                  </>\r\n                }\r\n              />\r\n\r\n              {/* Show accept/reject only to the pet owner while pending */}\r\n              {adoption && isOwner && pending && (\r\n                <Box sx={{ display: 'flex', gap: 1 }}>\r\n                  <Button color=\"success\" variant=\"contained\" onClick={() => handleAction(adoption._id, 'approved', n._id)}>Accept</Button>\r\n                  <Button color=\"error\" variant=\"outlined\" onClick={() => handleAction(adoption._id, 'rejected', n._id)}>Reject</Button>\r\n                </Box>\r\n              )}\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}